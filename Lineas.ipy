import matplotlib.pyplot as plt

def bresenham_line(x1, y1, x2, y2):
    dx = abs(x2 - x1)
    dy = abs(y2 - y1)
    steep = dy > dx
    if steep:
        x1, y1 = y1, x1
        x2, y2 = y2, x2
    swapped = x1 > x2
    if swapped:
        x1, x2 = x2, x1
        y1, y2 = y2, y1
    dx = abs(x2 - x1)
    dy = abs(y2 - y1)
    error = int(dx / 2)
    y_step = 1 if y1 < y2 else -1
    y = y1
    points = []
    for x in range(x1, x2 + 1):
        coord = (y, x) if steep else (x, y)
        points.append(coord)
        error -= dy
        if error < 0:
            y += y_step
            error += dx
    if swapped:
        points.reverse()
    return points

def draw_rectangle(x1, y1, x2, y2):
    lines = []
    lines.extend(bresenham_line(x1, y1, x1, y2))
    lines.extend(bresenham_line(x1, y2, x2, y2))
    lines.extend(bresenham_line(x2, y2, x2, y1))
    lines.extend(bresenham_line(x2, y1, x1, y1))
    return lines

# Example usage
rectangle_coordinates = (1, 1, 8, 6)  # (x1, y1, x2, y2)
lines = draw_rectangle(*rectangle_coordinates)

# Extract x and y coordinates from lines
x, y = zip(*lines)

# Plot the rectangle
plt.plot(x, y, marker='o', linestyle='-', color='b')
plt.grid(True)
plt.show()
